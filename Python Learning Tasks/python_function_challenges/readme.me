#Python Learning Tasks
This repository contains a collection of Python tasks designed for learning and practicing Python programming concepts.

## Task Descriptions

### Task 1: SSLC Grade to Percentage (`sslc_grad_to_percentage`)

Converts SSLC grades to percentage. A function is created to streamline the process of calculating the overall percentage based on given grades in different subjects.

### Task 2: Sum Even Odd (`sum_even_odd`)

Accepts a list of numbers, separates even and odd numbers, and returns the sum of even and odd numbers separately.

### Task 3: Reverse Words (`revers_words`)

Reverses each word in a string. This function provides a convenient way to reverse the order of characters in each word of a given string.

### Task 4: Common Elements (`common_elements`)

Finds common elements between two lists. This function is useful for identifying shared elements efficiently in two given lists.

### Task 5: Remove Duplicates (`remove_duplicates`)

Removes duplicate elements from a list. The function is created to eliminate redundant elements, providing a clean and unique list.

### Task 6: Is Palindrome (`is_palindrome`)

Checks if a given string is a palindrome. The function aids in determining whether a string reads the same backward as forward.

### Task 7: Count Vowels (`count_vowels`)

Counts the number of vowels in a string. This function simplifies the process of identifying and counting vowels in a given string.

### Task 8: Factorial (`factorial`)

Calculates the factorial of a given number. The function is created to find the factorial efficiently for educational purposes.

### Task 9: Largest Element (`largets_element`)

Finds the largest element in a list. The function is designed to determine the maximum value in a list of numbers.

### Task 10: Reverse Dict (`reverse_dict`)

Reverses the keys and values in a dictionary. This function swaps the keys and values in a dictionary, providing a reversed mapping.

### Task 11: Remove Duplicates Sorted (`remove_duplicates_sorted`)

Removes duplicates from a sorted list. This function ensures a unique list while maintaining the original order of elements.

### Task 12: Merge Sorted Lists (`merge_sorted_lists`)

Merges two sorted lists. The function efficiently combines two sorted lists into a single sorted list.

### Task 13A: Capitalize First Letters (`capitalize_first_letters`)

Capitalizes the first letters of words in a string. This function is useful for title-casing strings, ensuring the first letter of each word is capitalized.

### Task 13B: Title Case (`title_case`)

Capitalizes the first letter of each word in a string using the `title` method.

### Task 14: Average List (`average_list`)

Calculates the average of elements in a list. The function provides a straightforward way to find the average value of a list.

### Task 15: Find Longest Words (`find_longest_words`)

Finds the longest words in a sentence. The function is designed to extract and return a list of the longest words in a given sentence.
